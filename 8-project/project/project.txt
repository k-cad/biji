一. 软件项目

  1. 项目：具有一定完整功能的工程，可能包含软件和硬件的结合，也可能是纯代码开发。

	2. 应用层开发
	   
		 前端  客户端  前台 ： 和用户直接交互

		   要求 ：* 良好的用户体验
		          * 全面方便的功能
						  * 美观，有一定的效率优化
		
		 后端  服务端  后台 ： 处理数据和逻辑

		   要求：* 更高的并发量
			       * 更快的处理速度
						 * 更强的安全性


二. 项目开发流程

	1.需求分析 ： 确定用户的真是需求
    
		【1】 确定用户的真是需求，项目的基本功能
		【2】 确定项目整体难度和可行性
		【3】 完成需求分析文档，进行确认
	
	2. 概要设计 ： 对项目进行整体设计，技术架构确定
	  
		【1】 确定项目整体架构和功能模块
		【2】 确定技术思路和大的技术方向
		【3】 完成项目规划和分工
		【4】 形成概要设计文档
	
	3. 详细设计和编码：代码编写和代码设计文档
	   
		【1】编写项目代码
		【2】代码的基本测试
		【3】技术攻关
		【4】完成详细设计文档
	
	4. 项目测试 ：对项目进行测试
	  【1】 项目测试
		【2】 根据测试进行修改完善
	
	5. 项目发布 
	  【1】 项目提交发布
		【2】 完成项目说明文档
	
  	6. 后期维护
	  【1】 bug修改
		【2】 产品升级迭代


三. 项目注意事项
  
	1. 文档的编写
	  
		【1】需求分析文档
		【2】概要设计文档
		【3】详细设计文档
		【4】测试文档
		【5】说明文档
	
	2. 项目冲突 

	  【1】 按时完成项目是项目经理的首要工作
		【2】 项目实施人员冲突
	
	3. 项目计划性 ： 合理的项目计划是按时完成项目的保障


四. 项目工具使用推荐

  【1】 文档编写 ：word  markdown  ppt  excel
	【2】 流程图 ： visio  mindmanager  xmind
	【3】 项目管理：project
	【4】 代码管理： git  svn


五. PIP的使用

  1.作用：管理python的标准第三方库

	2.安装：sudo apt-get install  python3-pip

	3.常用命令

	  【1】 安装软件包 ：pip3 install [package]

		【2】 查看系统python包： pip3  list
		
		【3】 搜索软件包： pip3 search [name]

		【4】 查看软件包信息： pip3 show  [package]

		【5】 升级软件包：pip3 install --upgrade [package]

		【6】 卸载软件包：pip3 uninstall [package]

		【7】 导出软件环境：pip3 freeze > requirements.txt

	  【8】 使用文档自动安装软件环境：
					pip3 install -r requirements.txt


作业: 1. 将聊天室，文件服务器，电子词典添加readme说明后上					 传到github	 
      
			2. 复习http协议及httpserver第二版


复习：

1. git分支使用
2. git的远程仓库操作
3. github使用
4. 项目开发流程

*******************************************************
一. HTTPServer v3.0 

  1. 功能 ： 
	  【1】 HTTPServer部分 
				* 获取http请求
				* 解析http请求
				* 将请求发送给 WebFrame
				* 从数WebFrame接收据信息
				* 将数据信息组织为Response发送给客户端
		
		【2】 WebFrame部分
				* 从 httpserver 获取具体请求
				* 根据请求进行逻辑或者数据处理
				* 将数据资源发送给httpserver
  
	2. 升级

	  【1】httpserver与应用程序分离，各自独立
		【2】独立开发，降低相互干扰，采用各自配置的模式
		【3】在后端应用程序中优化了数据的处理模型

  3. HTTPServer 

	   包含文件 ：
		     * HTTPServer.py   主体程序
				 * config.py  配置文件

	4. WebFrame

		 包含文件 ：
				 * WebFrame.py  主体程序
				 * settings.py  配置文件
				 * views.py     数据处理方法模块
				 * static目录   存放静态网页

cookie：
  import  json

	json.dumps(dict)
	功能： 将python字典转换为json字符串
	参数： 字典
	返回值：转换后的json字符串

	json.loads(s)
	功能：将json字符串转换为字典
	参数： json字符串
	返回值：转换后的字典





