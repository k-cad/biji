课程：Python面向对象
进度：day4

上次内容回顾

1. 运算符重载
 1）算术运算符重载
    __add__(self,rhs)  obj+3
	__sub__(self,rhs)  obj-3
	__mul__(self,rhs)  obj*3
	__truediv__(self,rhs) obj/3
	__floordiv__(self,rhs) obj//3
	__mod__(self,rhs)  obj%3
	__pow__(self,rhs)  obj**3
	
	反向算术运算符： 3+obj
	复合算术运算符： obj += 3
  2)比较运算符
    __lt__(self,rhs)   obj < 3
	__gt__(self,rhs)   obj > 3
	__eq__(self,rhs)   obj == 3
	__ne__(self,rhs)   obj != 3
	__ge__(self,rhs)   obj >= 3
	__le__(self,rhs)   obj <= 3
	
  3)一元运算符：带一个操作数
    __neg__(self)   -obj
	__pos__(self)   +obj
	__invert__(self)  ~obj
	
  4)in,not in
    __contains__(self,e) 
	
  5)索引运算符重载
    __getitem__(self,i)  x=obj[i]
	__setitem__(self,i,val) obj[i]=x
	__delitem__(self,i)  del obj[i]

2. 对象的内置属性
  __dict__: 绑定对象的变量
  __class__:绑定创建本对象的类

作业：见car_store.py

今天的内容
1. 类属性和类方法
  1）类属性（类变量）
    - 什么是类属性：属于类，而不是对象
	- 可以通过类访问，也可通过对象访问
	  ClassName.attribute  通过类访问
	  objectName.attribute 通过对象访问
	- 定义：在类的所有方法之外定义
	- 特征：类变量为所有实例所共享

  2）类方法：属于类而不属于对象
    - 定义方式：需要在方法前加@classmethod装饰器
	- 特征：第一个参数不是self, 而是cls
	        绑定调用该方法的类而不是对象
			
			类方法不能访问对象属性
	- 访问：类.方法(), 或
	
  3）静态方法
    - 什么是静态方法：主要处理一些逻辑，
	  跟类有一定的相关性，跟类没有数据交互
	  （不操作类的属性）
	- 如何定义静态方法：通过@staticmethod
	  装饰器进行定义，不需要传入self和cls
	- 调用：可以通过类或对象进行调用
	- 意义：对一些独立的功能或操作进行
	        归类存放
			
2. 类的预置属性  
  1）__slots__属性 
    作用：用来限定属性的范围，示例化对象时，
	     不允许对象设置__slots__限定外的属性
		 从而防止因属性填写错误导致的程序错误
	类型：允许的属性名称（字符串）构成的列表
	     含有__slots__属性的类创建的对象
		 没有__dict__内置属性

  2）__doc__属性
    作用：绑定类中第一个没有赋值的字符串，
	      可以通过help函数进行查看。__doc__
		  属性主要存放类的描述信息
	示例：见staff.py
	查看：进入python交互模式，执行
			from staff import *
			help(Staff)

3. 类的关系设计（理解）
  1）继承关系
     - 描述子类、父类之间的关系
	 - 子类和父类是"是一个XX"的关系
	 
  2）组合关系
     - 一个对象中嵌入了另一个对象
	   描述"有一个"的关系
	   整体包含部分的关系
	 
  3）关联关系  
     - 一个类中嵌套了另一个类，但是这两个
	   类是平等关系，而不是局部和整体的关系
	 - 关联可以是单向，也可是双向
	 
	 示例代码：见chain_store.py

4. with语句
  1）作用：在访问某些资源时，不管有没有发生
     异常，都确保能够执行必须的清理操作，
	 并释放资源(类似于try-finally作用)
  2）语法
     with 表达式1 [as 变量1][,表达式2 [as 变量2]]
		语句块
	 例如：文件打开后自动关闭
	       线程资源的释放（系统编程阶段学习）

  3）实现原理：环境资源管理器(上下文管理器)
    - 定义了__enter__()和__exit__()方法的
	  对象称为环境资源管理器
	- 调用时机：__enter__()方法在with语句被
	            执行时调用
				__exit__()方法with语句结束时被调用

	- 格式：
	  __enter__(self)   略
	  __exit__(self, exc_type, exc_val, exc_tb)
	    参数:exc_type 异常类型，没有异常为None
		     exc_val 绑定异常对象，没有异常为None
			 exc_tb 绑定TrackBack对象，没有异常为None

作业：
编写一个程序，模拟扫福，各种福的概率如下：
爱国福 30%
敬业福 10%
和谐福 30%
友善福 20%
富强福 10%
编写代码进行模拟









