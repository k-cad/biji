day01回顾
   Guido Van Rossum
   1989

python 语言的优缺点:
  缺点:
    不能封闭源代码
    执行速度不够快
python 的官网: www.python.org


python 解释执行器的种类:
   CPython     ---> python3
   Jython
   IronPython


执行方式:
  解释执行:
    $ python3 xxx.py
    或
    #! /usr/bin/python3
    $ chmod +x xxx.py
    $ ./xxx.py  
  交互模块
    $ python3
    >>> 1 + 2
    3

python 的核心数据类型:
  数字(整数 int, 浮点型数 float,
      复数complex, 布尔型数bool)

  整数:
    1     2    3    100    0    -100
    0x123
    0b10001
    0o1234567
  浮点型数:
    3.14
    0.314e1
  复数:
    100j
    200+100j
    (-1+2j)
  布尔型数:
    True    值为1
    False   值为0


None 空值对象

表达式
  1 + 2 * (3 - 4)
  1
运算符:
  + - * / // % **

print() 函数,把数据输出到屏幕终端

变量和赋值语句
  变量名 = 表达式
  变量名1 = 变量名2 = ..... = 表达式
  变量名1, 变量名2, ...., 变量名n = 表达式1, 表达式2, ..., 表达式n

  注: = 号右侧的表达式先进行计算
  
del 语句
   删除变量,同时将被绑定对象的引用计数做 -1 操作

is 运算符:
  判断两个对应是否是同一个对象
  x is y
  x is not y

  判断的是一个对象的 ID

id(x)  返回一个对象的地址(整数)

CPython 中的小整数对象池 -5~256






day02笔记:
  运算符通常用于表达式中

复合赋值算术运算符
  算术运算符: +  -  *  /  // %  **
  复合赋值算术运算符  +=  -=   *=  /=  //=  %=  **=
  说明:
    x += y   # 作用等同于 x = x + y
    x -= y   # 作用等同于 x = x - y
    ...  # 以下略



比较运算符
  <    小于
  <=   小于等于
  >    大于
  >=   大于等于
  ==   等于
  !=   不等于

格式:
   左表达式 < 右表达式
说明:
  比较运算符返回布尔类型的值
示列:
  100 < 200        # 得到True
  1 + 5 == 2 + 4   # 得到True
  0 <= 100 <= 200   # 结果为True
  x = 50
  0 <= x <= 100  # True


数值对象的构造(创建) 函数
    函数名          说明
  float(obj)    用字符串或数字转换为浮点数,如果不给出参数,则
                返回0.0
  int(x,base=10) 或 int(x=0)  用数字或字符串转为整数,如果
                不给出参数,则返回0
  complex(r=0.0, i=0.0)    用数字创建一个复数(实部为r,虚
                部为i)
  bool(x)       用x获取一个布尔值(True或False)

函数调用表达式
  函数名(传参列表)
    函数调用是表达式,一定会返回一个对象的引用关系(或者返回None)

bool(x) 返回假值的情况:
   None   空值
   False  布尔假值
   0   0.0    0j   所有的数字零
   --------以下内容后面才讲------
   ''     空字符串
   ()      空元组
   []      空列表
   ...

练习:
  将数字 3.14 用变量 pi 绑定
  将 pi 变量转为整数,用变量 i 绑定
  将 pi 变量与 i 变量相减,结果用变量 f 绑定
    1. 判断f是否等同于0.14
    2. 删除所有变量
    (用交互模式来做)


预置(内建)的数值型函数
  函数        说明
  abs(x)     取x的绝对值
  round(number[, ndigits])  对数值进行"四舍五入",
             ndigits是小数向右取整煌位数,负数表示向左
             取整数位数
  pow(x, y, z=None)  当两个参数时相当于 x**y,当传入三个参
             数时,相当于 x**y%z

  示例:
    x = 123.456789
    print(round(x))  # 123

help() 查看函数帮助
  >>> help(函数名)


语句 statments
  语句由一些表达式组成,通常一条语句可以独立执行来完成一部分
    事情并形成结果
  python 建议一条语句写在一行内,多条语句写在一行内需要用
    分号(;) 分开
  示例:
    x = 100 + 200
    print("x=", x)
    # 写在一起:
    x = 100 + 200;print('x=', x)


显式换行
  折行符 \ (反斜杠)
    折行符必须放在一行的末尾,用来告诉解释执行器,下一行也是本
    行的语句
  示例见:
    statement2.py

隐式换行
  所有括号的内容换行,称为隐式换行
  括号包含:
     ()   []   {}
  示例见:
    statement3.py

基本输入输出函数:
基本输入函数 input
  函数    说明
 input('提示字符串') 返回用户输入的字符串(仅python3,
        提示字符串可以为空)

  说明:
    input函数是一个阻塞函数
  示例见:
    input.py

基本输出函数 print
  格式
    print(value, ..., sep=' ', end='\n', flush=False)
  作用:
    将一系列的值以字符串形式输出到标准输出设备上,默认为终端
  关键字参数:
    sep   两个值之间的分隔符,默认为一个空格
    end   输出完毕后在流末尾自动追加一个字符串,默认为换行
          符'\n'
    flush 是否立即进行输出
  示例见:
    print.py

练习:
  输入两个整数,分别用变量x,y绑定
    1) 计算这两个数的和,并打印
    2) 计算这两个数的积,并打印



if 语句
问题:
  有两条语句
    print("是偶数")
    print("是奇数")
  如何只让其中的一条语句执行,另一个不执行?

  语法:
    if 真值表达式1:
        语句块1
    elif 真值表达式2:
        语句块2
    elif 真值表达式3:
        语句块3
    ... # 此处可以有多个elif 子句
    else:
        语句块4
  作用:
    让程序根据条件选择性的执行某条语句或某些语句
  说明:
    elif 子句可以有0个,1个或多个
    else 子句只能有0个或1个,且只能放在最后  
    子句里的语句要缩进4个空格
  示例见:
    if.py

练习:
  1. 输入一个数,然后做下面两步判断
    1) 判断这个数是否在 50 ~ 100之间
    2) 判断这个数是否小于0

  示例见:
    if_elif_else.py

visual studio code 的使用
  打开终端:
    查看---> 终端
  快捷键:
    ctrl + /  注释和取消注释
    ctrl + s   保存(重要)
    tab 向右缩进
    shift + tab 向左缩进
    ctrl + d  选中相同的内容,产生多个光标
    ctrl + b  关闭/打开左侧侧边栏
  调试:
    调试---> 启动调试 (快捷键: F5)

练习:
  1. 输入一个季度 1~4 输出这个季度有哪儿几个月,如果输入的
  　　不是1~4的数，则提示用户"您输错了"

  2. 输入一年中的月份(1~12)，输出这个月有哪儿个季度，如果输
     入的是其它数，则提示: "您输错了"


if 语句的真值表达式:
  if 100:
      print("真值")
  # 等同于
  if bool(100):
      print("真值")

if 语句的嵌套:
  if 语句体身是由多条子句组成的一条复合语句
  if 语句可以作为语句嵌套到另一个复合语句的内部

示例见:
  if_embed.py

条件表达式
  语法:
    表达式1 if 真值表达式 else 表达式2
  作用:
    根据真值表达式的取值(True/False) 来决定执行表达式１或
    表达式2并返回结果
  示例见:
    if_express.py
    

练习:
  1. 写一个程序,输入一个数,用if语句计算这个数的绝对值,并打
     印此绝对值

  2. 写一个程序,输入一个数,用条件表达式计算这个数的绝对值,
     并打印此绝对值



pass 语句
  作用:
    通常用来填充语句空白
  语法:
    pass
  示例见:
    pass.py


布尔运算
  运算符:
    not       and      or
  
布尔非操作 not 
  语法:
    not x
  作用:
    对 x 进行 布尔取非,如bool(x) 为True,则返回False,否则
    返回True
  示例:
    not True     # False
    not False    # True
    not (1 > 2)  # True
    not 100      # False


布尔与操作 and 
  语法:
    x and y
    注: x,y代表表达式
  作用:
    优先返回假值对象
    当x的布尔值为False时,返回x,否则返回y
  示例:
    True and True    # True
    True and False   # False
    False and True   # False
    False and False  # False
    30 and 50        # 50
    0.0 and 0        # 0.0  优先返回假值对象

布尔或操作 or
  语法:
    x or y
  作用:
    优先返回真值对象
    当x为True时,返回x,否则返回y
  示例:
    True or True    # True
    True or False   # True
    False or True   # True
    False or False  # False
    30 or 50        # 30
    0.0 or 0        # 0


正负号运算符:
  +(正号)  -(负号)

  说明:
    一元运算符
  语法:
    + 表达式
    - 表达式
  示例:
    a = 5
    b = -a  # b=-5
    c = +a  # c=5


练习 :
  1. 北京出租车计价程序
    收费标准:
      3公里以内收费13元
      基本单价 2.3元/公里(超出3公里以外)
      空驶费: 超过15公里后,每公里加收单价的50%空驶费(即:
          15公里后为 3.45元/公里)
    要求:
      输入公里数,打印出费用金额(以元为单位,精确到分,分以后四舍
      五入)
  2. 写程序,任意给出三个数,打印出三个数中最大的一个数
  3. BMI 指数(Body Mass Index) 又称身体质量指数
    BMI值计算公式: BMI = 体重(公斤) / 身高的平方(米)
    如:
      一个69公斤的人,身高是173公分
      BMI = 69/1.73**2  得 23.05
    标准表:
      BMI < 18.5 体重过轻
      18.5 <= BMI < 24 正常范围 
      BMI > 24   体重过重
    输入身高和体重,打印出BMI的值,并打印出体重状况

    