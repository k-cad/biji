day12
装饰器 decorators(专业提高篇)
什么是装饰器
装饰器是一个函数，主要作用是用来包装另一个函数或类
作用：
    在不修改被装饰函数的源代码，不改变被装饰函数的调用方式的情况下添加或修改函数的功能
函数装饰器的语法
    def 装饰器的函数名(fn):
        语句块
        return 函数对象
    @装时器函数名<换行>
    def 被装饰函数名(形参列表)：
        语句块
示例见：mydecol.py

函数的文档字符串
   函数内的第一次未赋值给任何变量的字符串是此函数的文档字符串
   函数的文档字符串可以用>>>help(函数名)查看
语法：
    def 函数名(参数列表)：
       '函数的文档字符串'
       语句块
示例：def myfunc(a,b,c=0):
         '''这是文档字符串
         参数:
             a代表xxx
             b代表yyy
             ...
         '''
         pass
说明：
    文档字符串通常用来说明本函数的功能，使用方法和形参列表
    函数的文档字符串通常绑定在函数的__doc__属性上
    
函数的__doc__属性(attribute)
    __doc__属性用于绑定函数的文档字符串
函数的__name__属性
__name__属性用来记录函数名
注：
   以双下划线开头，以双下划线结束的标识符通常代表python的特殊变量
示例：
    def fabc():
        pass
    fn=fabc
    print(fn.__name__)
    print(fabc.__name__)

函数定义语句(def 语句)的完整语法
  [@装饰器名1]
  [@装饰器名2]
  [...]
  def 函数名([位置形参],[*元组形参],[命名关键字形参],[**字典形参]):
      '文档字符串'
      语句块
    注：[]内可省略

模块 Module
   什么是模块
       模块是一个包含有一系列数据函数类等组成的程序组
       模块是一个文件，模块文件通常以.py结尾
    作用：
        1,让一些相关的数据，函数，类等有逻辑的组织在一起，使逻辑机构更加清晰
        2，模块中的数据函数和类等可提供给其他模块和程序使用
    模块的分类：
        1,内置模块，在解析器的内部可以直接使用(一般用c语言编码）
        2,标准库模块，安装python时已安装可直接使用
        3，第三方模块(通常为开源，需要自己安装)
            安装命令：
              $ pip3 install 模块名
        4,用户自己编写的模块(可以作为其他人的第三方模块)

模块的导入语句
  import 语句
   语句：
      import 模块名1 [as 模块新名1],模块名2 [as 模块新名2],...
   示例：
   import math
   import sys,os
   import tensorflow as tf 
   作用：
     将某模块整体导入到当前模块
    用法：
      模块名.属性名
    示例：
        import math
        math.factorial(5)
dir(obj) 函数，返回模块中所有属性的字符串列表
help(obj) 函数，可以查看模块的相关的文档字符串

from import 语句
语法：
    from 模块名 import 模块属性名1 [as 属性新名1]，模块属性名2 [as 属性新名2]
作用：
    将模块内的一个或多个属性导入到当前模块的作用域
示例：
    form math import factorial as fac
    from math import sin cos 

    print(pi/2)
    print(fac(5))

from import * 语句
  语法：
     form 模块名 import *
  作用：
     将某模块的所有属性全部导入到当前模块
  示例：
  from math import *
  sin(pi/2)

dir 函数：
 dir ([对象]) 返回一个字符串列表
 参数说明
   如果没有参数调用，则返回当前作用域内所有变量的列表
   如果给定一个对象作为参数，则返回这个对象的所有变量的列表
     对于一个模块，返回这个模块的全部变量
     对一个类对象，返回类对象的所有变量，并递归基类对象的所有变量
     对于其他对象，返回所有变量，类变量和基类变量

数学模块
参见文档


