运算符有
　　符合赋值运算符
　　比较运算符
　　布尔运算
　　正负号运算
表达式
　　条件表达式：表达式1　if 真值表达式　else 表达式2
语句
　　if 语句
      if 真值表达式1:
          语句块
      elif 真值表达式2:
          语句块
      else :
          语句块
内建函数
    数值转化函数
    　　float(x)
        int(x=0)  或 int('x',base=10)
        complex(real=0.0,image=0.0)
        bool(x)
数值型函数
　　abs(x)
    round(x,位数)
　　pow(x,y,z=None)
基本输入输出函数:
  输入函数：
         input('提示字符串')
　　      返回用户输入的字符串
  输出函数：
         print(value,...,sep='',end='\n',flush=False)

day03
字符串　str
    作用：用来记录文本信息
    字符串的表示方式：在非注释中，凡是用引号括起来的部分都是字符串
    ' ' 单引号
    " " 双引号
    ''' 三单引 
    """ 三双引
空字符串的字面值表示方式：
    ''
    ""
    ''''''
    """"""
    注：空字符串的布尔型值bool(x)为False
非空字符串的字面值表示方法
    'hello'
    "hello"
    '''hello'''
单引号和双引号的区别
    单引号内的双引号不算结束符
    双引号内的单引号不算结束符
    示例如下：'"she" is used to be a man'
三引号字符串
    作用：三引号字符串中的换行会自动转换/n 

隐式字符串的字面值拼接
    示例如下：
            s="　I'm a teacher " ' I am studing "Python" '
用转义序列代表特殊字符
    字符串字面值中用字符反斜杠(\)后跟一个或一些字符代表特殊的一个字符
转义格式　说明
　\'      单引号(')
  \"      双引号
  \\      一个反斜杠
  \n 　　　换行
  \r      返回光标至行首
  \t 　　　水平制表符
  \v      垂直制表符
  \b      倒退
  \f 　　　换页
  \a      响铃
  \0      字符串，字符值为零
  \0oo    oo为两位八进制表示的字符
  \xXX    xx为两位十六进制表示的字符
  \uXXXX  UNICODE16的十六进制表示的字符
  \uXXXXXXXX UNICODE32的十六进制表示的字符

ASCII 编码表：$ man ascii <回车>
常有的的ASCII编码值：
    字符    十进制    十六进制
    '0'      48       0x30
    'A'      65       0x41
    'a'      97       0x61

求序列长度的函数len(x)
   len(x)  返回字符串中的字符个数

练习：
    下列字符串中的字符个数

raw 字符串(原始字符串)
    格式:
        r'字符串'
        r"字符串"
        r'''字符串'''
        r"""字符串"""
    作用：
        让转义字符\无效

字符串的运算
    + 加号用于拼接字符串
        x='ABCD'+'1234'
        print(x) #ABCD1234
        y=x+r'abcd'
        print(y) #ABCD1234abcd
    +=　运算符用于原字符串与右侧字符串拼接，变量绑定新生成的字符串
        x='ABCD'
        x+= '1234'
        print(x) # ABCD1234
    *   运算符用于生成重复的字符串
        x='ABCD'*3
        print(x) # ABCDABCDABCD 
    *=  用于生成重复的字符串，变量绑定新生成的字符串
        x=

    练习：
        写一个程序，打印一个高度为四行的矩形
        要求输入一个整数，   


字符串的比较
    运算符:
         <  <=  >  >=  ==  !=
    规则：
        依次安编码值进行两两字符比较，一但不同，则比较结束，
        返回比较结果，当编码值与长度完全相同时，两个字符串相等
    示例：　
        'a'<'b' # Ture
        'ABC'>='ADC' # False 

in 和 not in 运算符
    作用：　
        in 用于序列，字典，集合中，用于判断某个值是不是存在容器中，
        存在返回Ture，否则返回False
        not in 与之相反
    格式：
        对象　in 序列
    示例：　
        x='hello'
        
字符串的索引和切片操作
    索引　index
    python 字符串是不可以改变的字符序列
    语法：
        字符串[整数表达式]
    说明：
        python 序列都可以用索引(index)来访问序列中的对象
        python 序列正向索引是从零开始，第二个索引为1,最后一个为：len(s)-1
        python 序列反向索引是从-1开始的，－２是第二个数，第一个数为：-len(s)
    示例：　
        s='ABCDEF'
        s[2] #B 
        s[-2]  #E 
        s[9]  #越界

练习：
    输入一个字符串，打印如下内容：
    1,打印这个字符串的第一个字符
    2,打印这个字符串的最后一个字符
    3,如果长度是奇数，打印出中间字符

    切片 slice
    作用：　
        从字符串序列中取出相应的元素，重新组成一个新的字符串序列
    语法：
        s[(开始索引b):(结束索引e)(:(步长))]
        注：小括号内可省略
    说明：
        开始索引是切片开始切下的位置，0代表第一个元素，-1代表最后一个元素
        结束索引是切片的终止索引(但不包含终止点)
        步长是切片每次获取完当前元素后移动的方向和偏移量
           没有步长，相当于步长为1
           当步长为正数时，取正向切片：
               开始索引默认为0，结束索引为最后一个元素的下一个元素
           当步长为负数时，取反向切片：
               反向切片时，默认的起始位置为最后一个元素,终止位置是
               第一个元素的前一个位置
    示例:
        s='ABCDE'
        x=s[1:4] #'BCD"
        x=s[1:]  #'BCDE'
        x=s[:4]  #'ABCD'
        x=s[:]   #'ABCDE'
        x=s[1:1] #空字符串
        x=s[4:2] #空字符串

python 运算符优先级

    文档参见

python3中常见的序列函数
    len(x)    返回序列的长度
    max(x)    返回序列中最大的元素
    min(x)    返回序列中最小的元素

字符串编码转化函数
    ord(c)    返回一个字符c的UNICODE编码值
    chr(i)    返回i这个值的所对应的字符

练习：
    写一个程序，输入一段字符串，如果字符串不为空，
    则把字符串的第一个字符的编码值打印出来

整数转为字符串函数：
    bin(i)    将整数转换为二进制的字符串
    oct(i)    将整数转换为八进制的字符串
    hex(i)    将整数转换为十六进制的字符串
字符串的构造函数
    str(obj='')    将对象转换为字符串
python3 中常用的字符串方法(method)
    语法：
        对象，方法名(方法传参)
    示例：　
        'abc'.isalpha()    #语法是对的
        123.isalpha()    #

    s.replace(old[,new[,)

字符串　保存文件信息
' ' " " ''' ''' """ """
运算
   + += * *=
   < <= > >= == !=
   in , not in
   索引和切片[整数表达式]，[:],[::]
函数
   len(x),max(x),min(x)
   ord(x)